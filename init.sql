START TRANSACTION;
CREATE TABLE "Customer" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text,
    "Cpf" text,
    "Email" text,
    CONSTRAINT "PK_Customer" PRIMARY KEY ("Id")
);

CREATE TABLE "Product" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "Available" boolean NOT NULL,
    "ProductCategory" integer NOT NULL,
    "Value" numeric NOT NULL,
    "Description" text,
    "Image" text,
    CONSTRAINT "PK_Product" PRIMARY KEY ("Id")
);

CREATE TABLE "OrderSolicitation" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TypeOfIdentification" integer NOT NULL,
    "CustomerId" integer,
    "AnonymousIdentification" uuid,
    "OrderSolicitationStatus" integer NOT NULL,
    "TotalValue" numeric NOT NULL,
    "InitialDate" timestamp with time zone NOT NULL,
    "EndDate" timestamp with time zone,
    CONSTRAINT "PK_OrderSolicitation" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_OrderSolicitation_Customer_CustomerId" FOREIGN KEY ("CustomerId") REFERENCES "Customer" ("Id")
);

CREATE TABLE "Order" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TypeOfIdentification" integer NOT NULL,
    "CustomerId" integer,
    "AnonymousIdentification" uuid,
    "OrderStatus" integer NOT NULL,
    "TotalValue" numeric NOT NULL,
    "InitialDate" timestamp with time zone NOT NULL,
    "EndDate" timestamp with time zone,
    "PaymentStatus" integer NOT NULL,
    CONSTRAINT "PK_Order" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Order_Customer_CustomerId" FOREIGN KEY ("CustomerId") REFERENCES "Customer" ("Id")
);

CREATE TABLE "OrderItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ProductId" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "TotalValue" numeric NOT NULL,
    "Observations" text NOT NULL,
    "OrderId" integer,
    "OrderSolicitationId" integer,
    CONSTRAINT "PK_OrderItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_OrderItem_OrderSolicitation_OrderSolicitationId" FOREIGN KEY ("OrderSolicitationId") REFERENCES "OrderSolicitation" ("Id"),
    CONSTRAINT "FK_OrderItem_Order_OrderId" FOREIGN KEY ("OrderId") REFERENCES "Order" ("Id"),
    CONSTRAINT "FK_OrderItem_Product_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Product" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Remittance" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RemittanceStatus" integer NOT NULL,
    "Value" numeric NOT NULL,
    "ExternalId" text,
    "QrCode" text,
    "GenerateDate" timestamp with time zone NOT NULL,
    "PaymentDate" timestamp with time zone NOT NULL,
    "OrderId" integer NOT NULL,
    CONSTRAINT "PK_Remittance" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Remittance_Order_OrderId" FOREIGN KEY ("OrderId") REFERENCES "Order" ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_OrderItem_OrderId" ON "OrderItem" ("OrderId");

CREATE INDEX "IX_OrderItem_OrderSolicitationId" ON "OrderItem" ("OrderSolicitationId");

CREATE INDEX "IX_OrderItem_ProductId" ON "OrderItem" ("ProductId");

CREATE INDEX "IX_OrderSolicitations_CustomerId" ON "OrderSolicitation" ("CustomerId");

CREATE INDEX "IX_Orders_CustomerId" ON "Order" ("CustomerId");

CREATE INDEX "IX_Remittances_OrderId" ON "Remittance" ("OrderId");

INSERT INTO "Customer" ("Name", "Cpf", "Email")
VALUES 
('João Silva', '123.456.789-00', 'joao.silva@example.com'),
('Maria Oliveira', '987.654.321-00', 'maria.oliveira@example.com'),
('Carlos Souza', '456.789.123-00', 'carlos.souza@example.com'),
('Ana Lima', '321.654.987-00', 'ana.lima@example.com'),
('Pedro Santos', '654.321.987-00', 'pedro.santos@example.com'),
('Paula Costa', '789.123.456-00', 'paula.costa@example.com'),
('Lucas Almeida', '159.753.486-00', 'lucas.almeida@example.com'),
('Fernanda Rocha', '357.951.258-00', 'fernanda.rocha@example.com'),
('Ricardo Pereira', '951.357.852-00', 'ricardo.pereira@example.com'),
('Juliana Martins', '753.159.486-00', 'juliana.martins@example.com');

INSERT INTO "Product" ("Name", "Available", "ProductCategory", "Value", "Description", "Image") VALUES
('Hambúrguer', true, 0, 9.99, 'Delicioso hambúrguer com queijo', 'hamburguer.jpg'),
('Batata Frita', true, 1, 4.99, 'Batata frita crocante', 'batata_frita.jpg'),
('Refrigerante', true, 2, 2.99, 'Refrigerante gelado', 'refrigerante.jpg'),
('Sorvete', true, 3, 3.99, 'Sorvete de chocolate', 'sorvete.jpg'),
('Sanduíche Natural', true, 0, 7.99, 'Sanduíche natural com frango', 'sanduiche_natural.jpg'),
('Salada', true, 1, 5.99, 'Salada fresca', 'salada.jpg'),
('Suco de Laranja', true, 2, 3.49, 'Suco de laranja natural', 'suco_laranja.jpg'),
('Bolo de Chocolate', true, 3, 4.49, 'Bolo de chocolate caseiro', 'bolo_chocolate.jpg'),
('Pizza', true, 0, 12.99, 'Pizza de mussarela', 'pizza.jpg'),
('Café', true, 2, 1.99, 'Café expresso', 'cafe.jpg');

COMMIT;
