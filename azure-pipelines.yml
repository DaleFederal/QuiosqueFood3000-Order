trigger:
  branches:
    include:
      - main 

pool:
  name: Default

variables:
  acrName: "quiosquefoodacr"
  imageName: "quiosquefood" 
  aksCluster: "QuiosqueCluster" 
  resourceGroup: "QuiosqueFood-RG" 
  namespace: "quiosque-namespace" 

stages:
- stage: BuildAndPush
  displayName: "Build e Push da Imagem Docker"
  jobs:
  - job: Build
    displayName: "Build e Push para ACR"
    steps:
    - task: Docker@2
      displayName: "Login no ACR"
      inputs:
        command: login
        containerRegistry: "ACR conn"

    - task: Docker@2
      displayName: "Build da Imagem Docker"
      inputs:
        command: build
        dockerfile: "Dockerfile"
        repository: "$(acrName).azurecr.io/$(imageName)"
        tags: "$(Build.BuildId)"

    - task: Docker@2
      displayName: "Push da Imagem para o ACR"
      inputs:
        command: push
        repository: "$(acrName).azurecr.io/$(imageName)"
        tags: "$(Build.BuildId)"

- stage: Deploy
  displayName: "Deploy no AKS"
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: "Aplicar YAMLs no AKS"
    steps:
    - task: AzureCLI@2
      displayName: "Login no AKS"
      inputs:
        azureSubscription: "RG manager"
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(resourceGroup) --name $(aksCluster)

    - task: KubernetesManifest@1
      displayName: "Deploy no Kubernetes"
      inputs:
        action: deploy
        kubernetesServiceConnection: "kub conn"
        namespace: "$(namespace)"
        manifests: |
          deploymentInfrastructure/k8s/deployment.yaml
          deploymentInfrastructure/k8s/service.yaml
        imagePullSecrets: $(acrName)
        containers: |
          $(acrName).azurecr.io/$(imageName):$(Build.BuildId)
