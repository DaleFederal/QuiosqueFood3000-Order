name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: SUA_REGIAO_AWS
  ECR_REPOSITORY: SEU_ECR_REPOSITORY
  EKS_CLUSTER_NAME: SEU_EKS_CLUSTER_NAME
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f src/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Kubeconfig
      uses: aws-actions/amazon-eks-get-kubeconfig@v1
      with:
        cluster-name: ${{ env.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS
      env:
        IMAGE_URL: ${{ needs.build-and-push.outputs.image }}
      run: |
        sed -i "s|image: .*|image: ${{ needs.build-and-push.outputs.image }}|g" deploymentInfrastructure/k8s/deployment.yaml
        kubectl apply -f deploymentInfrastructure/k8s/
